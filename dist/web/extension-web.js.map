{"version":3,"file":"extension-web.js","mappings":"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","sources":["webpack://vscode-string-transform/./node_modules/lodash/_Symbol.js","webpack://vscode-string-transform/./node_modules/lodash/_arrayMap.js","webpack://vscode-string-transform/./node_modules/lodash/_asciiWords.js","webpack://vscode-string-transform/./node_modules/lodash/_baseGetTag.js","webpack://vscode-string-transform/./node_modules/lodash/_baseToString.js","webpack://vscode-string-transform/./node_modules/lodash/_freeGlobal.js","webpack://vscode-string-transform/./node_modules/lodash/_getRawTag.js","webpack://vscode-string-transform/./node_modules/lodash/_hasUnicodeWord.js","webpack://vscode-string-transform/./node_modules/lodash/_objectToString.js","webpack://vscode-string-transform/./node_modules/lodash/_root.js","webpack://vscode-string-transform/./node_modules/lodash/_unicodeWords.js","webpack://vscode-string-transform/./node_modules/lodash/isArray.js","webpack://vscode-string-transform/./node_modules/lodash/isObjectLike.js","webpack://vscode-string-transform/./node_modules/lodash/isSymbol.js","webpack://vscode-string-transform/./node_modules/lodash/toString.js","webpack://vscode-string-transform/./node_modules/lodash/words.js","webpack://vscode-string-transform/./src/utils/index.ts","webpack://vscode-string-transform/external commonjs \"vscode\"","webpack://vscode-string-transform/webpack/bootstrap","webpack://vscode-string-transform/webpack/runtime/global","webpack://vscode-string-transform/./src/extension.ts"],"sourcesContent":["var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","const words = require('lodash/words')\n\n/**\n * 转换成 `helloWorld` 命名方式\n *\n * @export\n * @return {*} \n */\nexport function words_to_helloWorld() {\n  return compose(firstLowerCase, (arr: string[]) => transformWordsToString(arr, firstUpperCase, ''), words)\n}\n\n/**\n * 转换成 `HelloWorld` 命名方式\n *\n * @export\n * @return {*} \n */\nexport function words_to_HelloWorld() {\n  return compose((arr: string[]) => transformWordsToString(arr, firstUpperCase, ''), words)\n}\n\n/**\n * 转换成 `HELLO_WORLD` 命名方式\n *\n * @export\n * @return {*} \n */\nexport function words_to_HELLO_WORLD() {\n  return compose((arr: string[]) => transformWordsToString(arr, toUpperCase, '_'), words)\n}\n\n/**\n * 转换成 `hello_world` 命名方式\n *\n * @export\n * @return {*} \n */\nexport function words_to_hello_world () {\n  return compose((arr: string[]) => transformWordsToString(arr, toLowerCase, '_'), words)\n}\n\n/**\n * 转换成 `hello-world` 命名方式\n *\n * @export\n * @return {*} \n */\nexport function words_to_hello_strike_world () {\n  return compose((arr: string[]) => transformWordsToString(arr, toLowerCase, '-'), words)\n}\n\n/**\n * 首字母大写\n * \n * @param  {} [first\n * @param  {string} ...rest]\n * @returns string\n */\nexport function firstUpperCase ([first, ...rest]: string): string {\n  return first.toUpperCase() + rest.join('').toLowerCase()\n}\n\n/**\n * 首字母小写\n * \n * @param  {} [first\n * @param  {string} ...rest]\n * @returns string\n */\nexport function firstLowerCase ([first, ...rest]: string): string {\n  return first.toLowerCase() + rest.join('')\n}\n\n/**\n * 小写字母转大写\n * \n * @param  {string} str\n * @returns string\n */\nexport function toUpperCase (str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 字母转小写\n *\n * @export\n * @param {string} str\n * @return {*}  {string}\n */\nexport function toLowerCase (str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * 每个单词首字母大写\n * \n * @param  {string[]} words\n * @param  {(word:string)=>string} transformMethod\n * @param  {string=''} hyphen\n * @returns string\n */\nexport function transformWordsToString (words: string[], transformMethod: (word: string) => string, hyphen: string = ''): string {\n  return words.map(word => transformMethod(word)).join(hyphen)\n}\n\n// export function () {}\n\n/**\n * 以大写字母为界限，拆分成单词数组\n * \n * @param  {string} strPart\n * @returns string[]\n */\nexport function splitUpperToArray (strPart: string): string[] {\n  return strPart.replace(/([A-Z])/g, '_$1').split('_').filter(Boolean)\n}\n\n/**\n * 删除下划线\n * \n * @param  {string} strPart\n * @returns string\n */\nexport function splitUnderlineToArray (strPart: string): string[] {\n  return strPart.split('_')\n}\n\nexport function compose (...funcs: Function[]) {\n  if (funcs.length === 0) {\n    return (arg: any) => arg\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n\n  return funcs.reduce((a, b) => (...args: any) => a(b(...args)))\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode'\nimport {\n  words_to_helloWorld,\n  words_to_HelloWorld,\n  words_to_HELLO_WORLD,\n  words_to_hello_world,\n  words_to_hello_strike_world,\n} from './utils/index'\n\nexport function activate(context: vscode.ExtensionContext) {\n\n  interface ICommandMap {\n    [key: string]: any\n  }\n\n  const commandMap: ICommandMap = {\n    to_helloWorld: words_to_helloWorld,\n    to_HelloWorld: words_to_HelloWorld,\n    to_HELLO_WORLD: words_to_HELLO_WORLD,\n    to_hello_world: words_to_hello_world,\n    to_hello_strike_world: words_to_hello_strike_world,\n  }\n\n  Object.keys(commandMap).forEach(commandSubName => {\n    let commandName: string = `vscode-string-transform.${commandSubName}`\n    let disposable = vscode.commands.registerCommand(commandName, function () {\n      // Get the active text editor\n      let editor = vscode.window.activeTextEditor\n      if (!editor) return\n  \n      let document = editor.document\n      // 获取单词的数组形式\n      let composedFunc = commandMap[commandSubName]()\n\n      editor?.edit(editBuilder => {\n        editor?.selections.forEach((selection) => {\n          const range = selection.isEmpty ? document.getWordRangeAtPosition(selection.start) || selection : selection;\n          let selectedText = document.getText(range)\n          let result = composedFunc(selectedText)\n          editBuilder.replace(range, result)\n        })\n      })\n    })\n\n    context.subscriptions.push(disposable)\n  })\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["Symbol","module","exports","array","iteratee","index","length","result","Array","reAsciiWord","string","match","getRawTag","objectToString","symToStringTag","toStringTag","undefined","value","Object","arrayMap","isArray","isSymbol","symbolProto","prototype","symbolToString","toString","baseToString","call","freeGlobal","g","objectProto","hasOwnProperty","nativeObjectToString","isOwn","tag","unmasked","e","reHasUnicodeWord","test","freeSelf","self","root","Function","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsEmoji","reUnicodeWord","RegExp","baseGetTag","isObjectLike","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","words","firstUpperCase","first","rest","toUpperCase","toLowerCase","firstLowerCase","str","transformWordsToString","transformMethod","hyphen","map","word","compose","funcs","arg","reduce","a","b","args","arr","strPart","replace","split","filter","Boolean","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","this","window","context","commandMap","to_helloWorld","words_to_helloWorld","to_HelloWorld","words_to_HelloWorld","to_HELLO_WORLD","words_to_HELLO_WORLD","to_hello_world","words_to_hello_world","to_hello_strike_world","words_to_hello_strike_world","keys","forEach","commandSubName","commandName","disposable","vscode","commands","registerCommand","editor","activeTextEditor","document","composedFunc","edit","editBuilder","selections","selection","range","isEmpty","getWordRangeAtPosition","start","selectedText","getText","subscriptions","push"],"sourceRoot":""}